<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Chimemoo</title>
    <link>https://chimemoo.github.io/tags/python/</link>
    <description>Recent content in Python on Chimemoo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id</language>
    <lastBuildDate>Sun, 14 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://chimemoo.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kamu harus coba Test Driven Development!</title>
      <link>https://chimemoo.github.io/posts/kamu-harus-coba-test-driven-development/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://chimemoo.github.io/posts/kamu-harus-coba-test-driven-development/</guid>
      <description>Intro Apakah kamu seorang programmer/developer? Ketika kamu membuat sebuah program apakah kamu melakukan testing terlebih dahulu sebelum kode tersebut digunakan? Jika tidak, segera bertobatlah, just kidding :). Pentingnya testing dalam tahap pengembangan program akan menjauhkan kita (programmer) dari hal yang tidak kita inginkan ketika program tersebut sudah berjalan di production. Oleh karena itu dalam setiap metode pengembangan software tahapan ini selalu ada.
Namun melakukan testing pada program yang dibuat adalah hal yang cukup mahal (bisa jadi memakan waktu atau membutuhkan banyak resource) jika dilakukan manual, oleh karena itu muncul lah tool automated testing yang membantu tahapan ini.</description>
    </item>
    
    <item>
      <title>Pentingnya Optimasi dalam Kode</title>
      <link>https://chimemoo.github.io/posts/pentingnya-optimasi-dalam-kode/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://chimemoo.github.io/posts/pentingnya-optimasi-dalam-kode/</guid>
      <description>Pendahuluan Ketika kita mencoba memecahkan masalah dengan menggunakan kode, banyak sekali cara yang dapat digunakan agar masalah tersebut terpecahkan. Mulai dari cara yang umum hingga tidak umum. Ketika kita dihadapkan dengan penggunaan kode tersebut dalam skala besar, misalnya kode tersebut akan digunakan secara terus menerus dalam rentang waktu bersamaan. Kita perlu memikirkan apakah kode yang kita tulis sudah optimal atau belum? Maksud optimal disini adalah resource yang digunakan sedikit dan waktu yang dibutuhkan untuk komputasi sebentar.</description>
    </item>
    
  </channel>
</rss>
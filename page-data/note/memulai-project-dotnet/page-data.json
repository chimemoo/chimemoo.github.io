{"componentChunkName":"component---src-templates-note-post-js","path":"/note/memulai-project-dotnet/","result":{"data":{"site":{"siteMetadata":{"title":"Christmemory Site"}},"markdownRemark":{"id":"610da936-7b49-5dbd-81c1-14014fbf9079","excerpt":"Instalasi .NET Download .NET Core https://dotnet.microsoft.com/download Download VS Code C# Extension Memulai Project Buat sebuah folder baru, kemudian buka…","html":"<h1>Instalasi .NET</h1>\n<ul>\n<li>Download .NET Core <a href=\"https://dotnet.microsoft.com/download\">https://dotnet.microsoft.com/download</a></li>\n<li>Download VS Code</li>\n<li>C# Extension</li>\n</ul>\n<h1>Memulai Project</h1>\n<ol>\n<li>Buat sebuah folder baru, kemudian buka dalam VSCode</li>\n<li>\n<p>Buka terminal jalankan perintah </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">dotnet new console</code></pre></div>\n</li>\n<li>Perintah diaas akan membuat sebuah project awal dengan basic hello world</li>\n<li>\n<p>Kemudian untuk menjalankan program, ketikkan perintah</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">dotnet run</code></pre></div>\n</li>\n<li>Akan muncul tulisan “Hello World!”</li>\n</ol>\n<h1>Menambahkan NuGet package menggunakan .NET Core tool</h1>\n<ol>\n<li>\n<p>Pada contoh ini kita akan menambahkan library Humanizer, ketikan perintah berikut di terminal</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">dotnet <span class=\"token function\">add</span> package Humanizer --version <span class=\"token number\">2.7</span>.9</code></pre></div>\n<p>Dotnet akan mendownload library tersebut dari NuGet</p>\n</li>\n<li>\n<p>Setelah selesai buka file DotNetDepedencies.csproj, lalu temukan section ItemGroup, kemudian seharusnya library Humanizer sudah muncul seperti berikut</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ItemGroup</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PackageReference</span> <span class=\"token attr-name\">Include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Humanizer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2.7.9<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ItemGrou</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p>Setelah itu buka file Program.cs, import Humanizer pada bagian atas Program.cs</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">using Humanizer;</code></pre></div>\n</li>\n<li>\n<p>Kemudian pada bagian di dalam kelas program, dibawah method main tambahkan kode berikut untuk menampilkan penggunaan library Humanize</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">static void HumanizeQuantities()\n{\n    Console.WriteLine(&quot;case&quot;.ToQuantity(0));\n    Console.WriteLine(&quot;case&quot;.ToQuantity(1));\n    Console.WriteLine(&quot;case&quot;.ToQuantity(5));\n}\n\nstatic void HumanizeDates()\n{\n    Console.WriteLine(DateTime.UtcNow.AddHours(-24).Humanize());\n    Console.WriteLine(DateTime.UtcNow.AddHours(-2).Humanize());\n    Console.WriteLine(TimeSpan.FromDays(1).Humanize());\n    Console.WriteLine(TimeSpan.FromDays(16).Humanize());\n}</code></pre></div>\n</li>\n<li>\n<p>Kemudian pada Main method panggil fungsi yang sudah kita buat sebelumnya</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">static void Main(string[] args)\n{   \n    Console.WriteLine(&quot;Quantities:&quot;);\n    HumanizeQuantities();\n\n    Console.WriteLine(&quot;\\nDate/Time Manipulation:&quot;);\n    HumanizeDates();\n}</code></pre></div>\n</li>\n<li>\n<p>Setelah itu jalankan kembali program menggunakan dotnet run. Hasilnya seperti berikut</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Quantities:\n0 cases\n1 case\n5 cases\n\nDate/Time Manipulation:\nyesterday\n2 hours ago\n1 day\n2 weeks </code></pre></div>\n</li>\n</ol>","frontmatter":{"title":"Memulai project .NET?","date":"March 14, 2021","description":null}},"previous":{"fields":{"slug":"/bagaimana-penamaan-variable-fungsi-kelas-yang-benar/"},"frontmatter":{"title":"Bagaimanah penamaan Variabel, fungsi, Kelas yang benar?"}},"next":{"fields":{"slug":"/apa-itu-dotnet/"},"frontmatter":{"title":"Apa itu .NET?"}}},"pageContext":{"id":"610da936-7b49-5dbd-81c1-14014fbf9079","previousNoteId":"4053bad7-e6d7-5690-af5e-f7f8ac7b37c8","nextNoteId":"420c5bdd-21f2-5d1a-9e86-998f6479885a"}},"staticQueryHashes":["2841359383"]}
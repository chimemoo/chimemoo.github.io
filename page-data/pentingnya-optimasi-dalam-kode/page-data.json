{"componentChunkName":"component---src-templates-blog-post-js","path":"/pentingnya-optimasi-dalam-kode/","result":{"data":{"site":{"siteMetadata":{"title":"Christmemory Site"}},"markdownRemark":{"id":"760bb85b-447d-5ca1-9228-f53e699806ae","excerpt":"Pendahuluan Ketika kita mencoba memecahkan masalah dengan menggunakan kode, banyak sekali cara yang dapat digunakan agar masalah tersebut terpecahkan. Mulaiâ€¦","html":"<h2>Pendahuluan</h2>\n<p>Ketika kita mencoba memecahkan masalah dengan menggunakan kode, banyak sekali cara yang dapat digunakan agar masalah tersebut terpecahkan. Mulai dari cara yang umum hingga tidak umum. Ketika kita dihadapkan dengan penggunaan kode tersebut dalam skala besar, misalnya kode tersebut akan digunakan secara terus menerus dalam rentang waktu bersamaan. Kita perlu memikirkan apakah kode yang kita tulis sudah optimal atau belum? Maksud optimal disini adalah resource yang digunakan sedikit dan waktu yang dibutuhkan untuk komputasi sebentar. Proses untuk mengoptimalkan kode sehingga lebih efisien dalam penggunaan resource dan penggunaan waktu lebih cepat disebut dengan Optimasi.</p>\n<h2>Studi kasus</h2>\n<p>Studi kasus disini saya dapat dari Udacity. Pada soalnya diberikan dua file <code class=\"language-text\">books_published_last_two_years.txt</code> dan <code class=\"language-text\">all_coding_books.txt</code> yang berisi <strong>ids</strong> buku. Tugasnya adalah untuk menghitung berapa buku Coding yang muncul dua tahun terakhir.</p>\n<p>Sampel isi file <code class=\"language-text\">books_published_last_two_years.txt</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1262771\n9011996\n2007022\n9389522\n8181760\n9203790</code></pre></div>\n<p>Sampel isi file <code class=\"language-text\">all_coding_books.txt</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">4140074\n3058732\n4181244\n8709089\n9097893\n2606750</code></pre></div>\n<p>Kemudian import semua library yang dibutuhkan</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</code></pre></div>\n<p>Lalu read file dan simpan kedalam list <code class=\"language-text\">recent_books</code> dan <code class=\"language-text\">coding_books</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'books_published_last_two_years.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    recent_books <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'all_coding_books.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    coding_books <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Ketika membaca soal tersebut mungkin ide yang muncul adalah kita dapat melakukan looping pada <code class=\"language-text\">recent_books</code> lalu jika buku tersebut ada di <code class=\"language-text\">coding_books</code> kemudian simpan kedalam <code class=\"language-text\">recent_coding_books</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nrecent_coding_books <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> book <span class=\"token keyword\">in</span> recent_books<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> book <span class=\"token keyword\">in</span> coding_books<span class=\"token punctuation\">:</span>\n        recent_coding_books<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>recent_coding_books<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Duration: {} seconds'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Hasil perhitungan dan waktu dari komputasinya didapatkan </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">96\nDuration: 17.40716576576233 seconds</code></pre></div>\n<p>Artinya dibutuhkan 17 detik untuk mendapatkan total 96 buku koding 2 tahun terbaru pada file. Kita dapat melakukan peningkatan pada kecepatan komputasinya, jika kita berpikir lebih jauh, masalah diatas merupakan masalah irisan. Kita ditugaskan untuk mencari irisan antara dua data.</p>\n<p>Sebelumnya kita sudah mengimport numpy. Pada numpy terdapat sebuah fungsi <code class=\"language-text\">intersect1d</code> dimana fungsi tersebut berfungsi untuk mencari irisan data.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nrecent_coding_books <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>intersect1d<span class=\"token punctuation\">(</span>recent_books<span class=\"token punctuation\">,</span> coding_books<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>recent_coding_books<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Duration: {} seconds'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Waktu yang dibutuhkan untuk komputasi proses diatas yaitu :</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">96\nDuration: 0.04141545295715332 seconds</code></pre></div>\n<p>Bagaimana? lebih cepat bukan? kita hanya membutuhkan 0.04 sekon dari yang sebelumnya 17 sekon.</p>\n<p>Sekarang kita coba untuk meningkatkan lagi kecepatannya yaitu berdasarkan jawaban dari stackoverflow ini <a href=\"https://stackoverflow.com/questions/8929284/what-makes-sets-faster-than-lists/8929445#8929445\">What makes set faster than lists</a> terdapat sebuah jawaban menarik yang menjelaskan bahwa sets lebih cepat dari lists. Seperti yang kita tau sebelumnya, bahwa kita menyimpan data <code class=\"language-text\">coding_books</code> dan <code class=\"language-text\">recent_books</code> dalam bentuk lists, oleh karena itu kita akan coba mengkonversikannya dalam bentuk sets.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nrecent_coding_books <span class=\"token operator\">=</span>  <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>recent_books<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intersection<span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>coding_books<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>recent_coding_books<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Duration: {} seconds'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Waktu yang dibutuhkan untuk komputasinya yaitu</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">96\nDuration: 0.01536870002746582 seconds</code></pre></div>\n<p>Bagaimana lebih cepat bukan? Hal yang dapat diambil dari studi kasus ini adalah pemahaman soal tipe data akan membantu kita menuliskan kode lebih baik, lebih cepat dan lebih solid.</p>","frontmatter":{"title":"Pentingnya Optimasi dalam Kode","date":"June 13, 2020","description":"Ketika kita mencoba memecahkan masalah dengan menggunakan kode, banyak sekali cara yang dapat digunakan agar masalah tersebut terpecahkan. Mulai dari cara yang umum hingga tidak umum. Ketika kita dihadapkan dengan penggunaan kode tersebut dalam skala besar, misalnya kode tersebut akan digunakan secara terus menerus dalam rentang waktu bersamaan."}},"allMarkdownRemark":{"tag":[{"tag":"Clean code","totalCount":1},{"tag":"Dicoding","totalCount":1},{"tag":"Javascript","totalCount":1},{"tag":"Programming","totalCount":2},{"tag":"Python","totalCount":3},{"tag":"React","totalCount":1},{"tag":"React Native","totalCount":1},{"tag":"Submission","totalCount":1},{"tag":"Testing","totalCount":1},{"tag":"Tutorial","totalCount":1}]},"previous":null,"next":{"fields":{"slug":"/kamu-harus-coba-test-driven-development/"},"frontmatter":{"title":"Kamu harus coba Test Driven Development!"}}},"pageContext":{"id":"760bb85b-447d-5ca1-9228-f53e699806ae","previousPostId":null,"nextPostId":"ae750d6c-2d81-5c73-856e-1851851dc27b"}},"staticQueryHashes":["2841359383"]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/submission-dicoding-kelas-belajar-machine-learning/","result":{"data":{"site":{"siteMetadata":{"title":"Christmemory Site"}},"markdownRemark":{"id":"d657884b-f7f8-5e28-8f19-03cdf13afc92","excerpt":"Pendahuluan Halo semuanya, setelah saya berusaha untuk menyelesaikan kelas belajar machine learning pemula sambil melakukan kesibukan lain seperti bekerja danâ€¦","html":"<h2>Pendahuluan</h2>\n<p>Halo semuanya, setelah saya berusaha untuk menyelesaikan kelas belajar machine learning pemula sambil melakukan kesibukan lain seperti bekerja dan hal lainnya. Akhirnya saya menyelesaikan submission. Submission yang ada pada kelas ini adalah mencoba menggunakan dataset gambar rock sccisors paper dimana kita harus melakukan klasifikasi dengan ketentuan yang telah diberikan. Dimana minimal akurasi yang harus didapatkan agar lulus kelas ini adalah 85%. Temen-temen yang mungkin mengambil kelas tersebut bisa mempelajari kode dibawah untuk menyelesaikannya.</p>\n<p>Kode ini saya tulis di colabs.research.google.com, kode yang ada dibawah adalah hasil konversi ke markdown.</p>\n<h2>Kode</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Install for spliting folder</span>\n!pip install split<span class=\"token operator\">-</span>folders\n!pip install split<span class=\"token operator\">-</span>folders tqdm</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Requirement already satisfied: split-folders in /usr/local/lib/python3.6/dist-packages (0.3.1)\nRequirement already satisfied: split-folders in /usr/local/lib/python3.6/dist-packages (0.3.1)\nRequirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (4.41.1)</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Importing all need</span>\n<span class=\"token keyword\">import</span> urllib<span class=\"token punctuation\">.</span>request\n<span class=\"token keyword\">import</span> zipfile<span class=\"token punctuation\">,</span> os\n<span class=\"token keyword\">import</span> split_folders\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> glob\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">import</span> tensorflow <span class=\"token keyword\">as</span> tf\n<span class=\"token keyword\">from</span> google<span class=\"token punctuation\">.</span>colab <span class=\"token keyword\">import</span> files\n<span class=\"token keyword\">from</span> keras<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> image\n<span class=\"token keyword\">from</span> tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers <span class=\"token keyword\">import</span> Conv2D<span class=\"token punctuation\">,</span> MaxPooling2D<span class=\"token punctuation\">,</span> Dense<span class=\"token punctuation\">,</span> Flatten\n<span class=\"token keyword\">from</span> tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Sequential\n<span class=\"token keyword\">from</span> tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>preprocessing<span class=\"token punctuation\">.</span>image <span class=\"token keyword\">import</span> ImageDataGenerator</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Using TensorFlow backend.</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">urllib<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>urlretrieve<span class=\"token punctuation\">(</span><span class=\"token string\">'https://dicodingacademy.blob.core.windows.net/picodiploma/ml_pemula_academy/rockpaperscissors.zip'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rockpaperscissors.zip'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(&#39;rockpaperscissors.zip&#39;, &lt;http.client.HTTPMessage at 0x7f85eb24f048&gt;)</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Read &amp; extract the file dataset</span>\nlocal_zip <span class=\"token operator\">=</span> <span class=\"token string\">'rockpaperscissors.zip'</span>\nzip_ref <span class=\"token operator\">=</span> zipfile<span class=\"token punctuation\">.</span>ZipFile<span class=\"token punctuation\">(</span>local_zip<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span>\nzip_ref<span class=\"token punctuation\">.</span>extractall<span class=\"token punctuation\">(</span><span class=\"token string\">'/content/'</span><span class=\"token punctuation\">)</span>\nzip_ref<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Split dataset data train and val</span>\nsplit_folders<span class=\"token punctuation\">.</span>ratio<span class=\"token punctuation\">(</span><span class=\"token string\">'/content/rockpaperscissors/rps-cv-images'</span><span class=\"token punctuation\">,</span> output<span class=\"token operator\">=</span><span class=\"token string\">\"/content/rockpaperscissors/output_result\"</span><span class=\"token punctuation\">,</span> ratio<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Copying files: 2188 files [00:01, 1107.79 files/s]</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># define folder location</span>\nbase_dir <span class=\"token operator\">=</span> <span class=\"token string\">'/content/rockpaperscissors/output_result'</span>\ntrain_dir <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>base_dir<span class=\"token punctuation\">,</span> <span class=\"token string\">'train'</span><span class=\"token punctuation\">)</span>\nvalidation_dir <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>base_dir<span class=\"token punctuation\">,</span> <span class=\"token string\">'val'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># show folder val list</span>\nos<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span><span class=\"token string\">'/content/rockpaperscissors/output_result/val'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[&#39;scissors&#39;, &#39;rock&#39;, &#39;paper&#39;]</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># definition function for read list name of file</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">read_list</span><span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  list_label <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  list_file <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">for</span> label <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      list_label<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">)</span>\n      list_file<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'labels'</span><span class=\"token punctuation\">:</span> list_label<span class=\"token punctuation\">,</span> <span class=\"token string\">'filepath'</span><span class=\"token punctuation\">:</span>list_file<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">train_df <span class=\"token operator\">=</span> read_list<span class=\"token punctuation\">(</span>train_dir<span class=\"token punctuation\">)</span>\nvalidation_df <span class=\"token operator\">=</span> read_list<span class=\"token punctuation\">(</span>validation_dir<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">pd<span class=\"token punctuation\">.</span>set_option<span class=\"token punctuation\">(</span><span class=\"token string\">'display.max_colwidth'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ntrain_df</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:1: FutureWarning: Passing a negative integer is deprecated in version 1.0 and will not be supported in future version. Instead, use None to not limit the column width.\n  &quot;&quot;&quot;Entry point for launching an IPython kernel.</code></pre></div>\n<p>{{&#x3C; rawhtml >}}</p>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}</code></pre></div>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>labels</th>\n      <th>filepath</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>scissors</td>\n      <td>/content/rockpaperscissors/output_result/train/scissors/1L1n6plr7jlZGirw.png</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>scissors</td>\n      <td>/content/rockpaperscissors/output_result/train/scissors/2l1K148aIJHRR1q7.png</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>scissors</td>\n      <td>/content/rockpaperscissors/output_result/train/scissors/ksWe2SZsjOoLAzf5.png</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>scissors</td>\n      <td>/content/rockpaperscissors/output_result/train/scissors/DH7iguASbWIzzBnT.png</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>scissors</td>\n      <td>/content/rockpaperscissors/output_result/train/scissors/Kzghoy329glIgfcC.png</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1744</th>\n      <td>paper</td>\n      <td>/content/rockpaperscissors/output_result/train/paper/em91htnBohvtnG2e.png</td>\n    </tr>\n    <tr>\n      <th>1745</th>\n      <td>paper</td>\n      <td>/content/rockpaperscissors/output_result/train/paper/QKFJL22hutlivVGa.png</td>\n    </tr>\n    <tr>\n      <th>1746</th>\n      <td>paper</td>\n      <td>/content/rockpaperscissors/output_result/train/paper/Gc4hUsoFAQBdulGg.png</td>\n    </tr>\n    <tr>\n      <th>1747</th>\n      <td>paper</td>\n      <td>/content/rockpaperscissors/output_result/train/paper/hUDN2qXDxjoGBWqu.png</td>\n    </tr>\n    <tr>\n      <th>1748</th>\n      <td>paper</td>\n      <td>/content/rockpaperscissors/output_result/train/paper/AMewmfMVCnLfbuNr.png</td>\n    </tr>\n  </tbody>\n</table>\n<p>1749 rows Ã— 2 columns</p>\n</div>\n{{< /rawhtml >}}\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># setup image data generator</span>\ndata_train_img_gen <span class=\"token operator\">=</span> ImageDataGenerator<span class=\"token punctuation\">(</span>\n    rotation_range<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    rescale<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span>\n    shear_range<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\n    zoom_range<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\n    horizontal_flip<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n    fill_mode<span class=\"token operator\">=</span><span class=\"token string\">'nearest'</span>\n  <span class=\"token punctuation\">)</span>\n\ndata_val_img_gen <span class=\"token operator\">=</span> ImageDataGenerator<span class=\"token punctuation\">(</span>\n    rotation_range<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    rescale<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span>\n    shear_range<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\n    zoom_range<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\n    horizontal_flip<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n    fill_mode<span class=\"token operator\">=</span><span class=\"token string\">'nearest'</span>\n  <span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Make train generator</span>\ntrain_generator <span class=\"token operator\">=</span> data_train_img_gen<span class=\"token punctuation\">.</span>flow_from_dataframe<span class=\"token punctuation\">(</span>\n    train_df<span class=\"token punctuation\">,</span>\n    class_mode<span class=\"token operator\">=</span><span class=\"token string\">'categorical'</span><span class=\"token punctuation\">,</span>\n    x_col<span class=\"token operator\">=</span><span class=\"token string\">'filepath'</span><span class=\"token punctuation\">,</span>\n    y_col<span class=\"token operator\">=</span><span class=\"token string\">'labels'</span><span class=\"token punctuation\">,</span>\n    target_size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    batch_size<span class=\"token operator\">=</span><span class=\"token number\">4</span>\n<span class=\"token punctuation\">)</span>\n\nval_generator <span class=\"token operator\">=</span> data_val_img_gen<span class=\"token punctuation\">.</span>flow_from_dataframe<span class=\"token punctuation\">(</span>\n    validation_df<span class=\"token punctuation\">,</span>\n    class_mode<span class=\"token operator\">=</span><span class=\"token string\">'categorical'</span><span class=\"token punctuation\">,</span>\n    x_col<span class=\"token operator\">=</span><span class=\"token string\">'filepath'</span><span class=\"token punctuation\">,</span>\n    y_col<span class=\"token operator\">=</span><span class=\"token string\">'labels'</span><span class=\"token punctuation\">,</span>\n    target_size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    batch_size<span class=\"token operator\">=</span><span class=\"token number\">4</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Found 1749 validated image filenames belonging to 3 classes.\nFound 439 validated image filenames belonging to 3 classes.</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Create model and do training</span>\nmodel <span class=\"token operator\">=</span> Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nmodel<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span><span class=\"token string\">'relu'</span><span class=\"token punctuation\">,</span> input_shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nmodel<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>MaxPooling2D<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nConv2D<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span><span class=\"token string\">'relu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nmodel<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>MaxPooling2D<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nmodel<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span><span class=\"token string\">'relu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nmodel<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>MaxPooling2D<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nmodel<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span><span class=\"token string\">'relu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nmodel<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>MaxPooling2D<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nmodel<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nmodel<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span><span class=\"token string\">'relu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nmodel<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span><span class=\"token string\">'softmax'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nmodel<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>\n    loss<span class=\"token operator\">=</span><span class=\"token string\">'categorical_crossentropy'</span><span class=\"token punctuation\">,</span>\n    optimizer<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    metrics<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'accuracy'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span>\n\nmodel<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>\n    train_generator<span class=\"token punctuation\">,</span>\n    steps_per_epoch<span class=\"token operator\">=</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span>\n    epochs<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    validation_data<span class=\"token operator\">=</span>val_generator<span class=\"token punctuation\">,</span>\n    validation_steps<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    verbose<span class=\"token operator\">=</span><span class=\"token number\">2</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Epoch 1/20\n25/25 - 3s - loss: 1.1445 - accuracy: 0.3700 - val_loss: 1.1281 - val_accuracy: 0.2000\nEpoch 2/20\n25/25 - 3s - loss: 1.1044 - accuracy: 0.3000 - val_loss: 1.1003 - val_accuracy: 0.2500\nEpoch 3/20\n25/25 - 3s - loss: 1.0883 - accuracy: 0.3900 - val_loss: 1.0841 - val_accuracy: 0.3000\nEpoch 4/20\n25/25 - 3s - loss: 1.1039 - accuracy: 0.3700 - val_loss: 1.0939 - val_accuracy: 0.4000\nEpoch 5/20\n25/25 - 3s - loss: 1.0356 - accuracy: 0.5000 - val_loss: 1.0847 - val_accuracy: 0.3500\nEpoch 6/20\n25/25 - 3s - loss: 1.0018 - accuracy: 0.4700 - val_loss: 0.8752 - val_accuracy: 0.7500\nEpoch 7/20\n25/25 - 3s - loss: 0.8081 - accuracy: 0.6600 - val_loss: 0.8446 - val_accuracy: 0.5500\nEpoch 8/20\n25/25 - 3s - loss: 0.5471 - accuracy: 0.8000 - val_loss: 0.3771 - val_accuracy: 0.8500\nEpoch 9/20\n25/25 - 3s - loss: 0.7126 - accuracy: 0.7300 - val_loss: 0.8818 - val_accuracy: 0.7000\nEpoch 10/20\n25/25 - 3s - loss: 0.5534 - accuracy: 0.8300 - val_loss: 0.3515 - val_accuracy: 0.9000\nEpoch 11/20\n25/25 - 3s - loss: 0.4881 - accuracy: 0.8300 - val_loss: 0.5941 - val_accuracy: 0.8500\nEpoch 12/20\n25/25 - 3s - loss: 0.4568 - accuracy: 0.8600 - val_loss: 0.5413 - val_accuracy: 0.8500\nEpoch 13/20\n25/25 - 3s - loss: 0.2625 - accuracy: 0.9200 - val_loss: 0.3694 - val_accuracy: 0.9000\nEpoch 14/20\n25/25 - 3s - loss: 0.4571 - accuracy: 0.8400 - val_loss: 0.7890 - val_accuracy: 0.7000\nEpoch 15/20\n25/25 - 3s - loss: 0.2869 - accuracy: 0.8900 - val_loss: 0.3632 - val_accuracy: 0.8500\nEpoch 16/20\n25/25 - 3s - loss: 0.4002 - accuracy: 0.8400 - val_loss: 0.4019 - val_accuracy: 0.9500\nEpoch 17/20\n25/25 - 3s - loss: 0.4632 - accuracy: 0.8600 - val_loss: 0.3026 - val_accuracy: 0.8500\nEpoch 18/20\n25/25 - 3s - loss: 0.1978 - accuracy: 0.9300 - val_loss: 0.2208 - val_accuracy: 0.8500\nEpoch 19/20\n25/25 - 3s - loss: 0.1680 - accuracy: 0.9400 - val_loss: 0.6753 - val_accuracy: 0.8500\nEpoch 20/20\n25/25 - 3s - loss: 0.2450 - accuracy: 0.9300 - val_loss: 0.0911 - val_accuracy: 1.0000\n\n\n\n\n\n&lt;tensorflow.python.keras.callbacks.History at 0x7f85e418ebe0&gt;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># See summary of model</span>\nmodel<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Model: &quot;sequential&quot;\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\nconv2d (Conv2D)              (None, 148, 148, 32)      896       \n_________________________________________________________________\nmax_pooling2d (MaxPooling2D) (None, 74, 74, 32)        0         \n_________________________________________________________________\nmax_pooling2d_1 (MaxPooling2 (None, 37, 37, 32)        0         \n_________________________________________________________________\nconv2d_2 (Conv2D)            (None, 35, 35, 64)        18496     \n_________________________________________________________________\nmax_pooling2d_2 (MaxPooling2 (None, 17, 17, 64)        0         \n_________________________________________________________________\nconv2d_3 (Conv2D)            (None, 15, 15, 64)        36928     \n_________________________________________________________________\nmax_pooling2d_3 (MaxPooling2 (None, 7, 7, 64)          0         \n_________________________________________________________________\nflatten (Flatten)            (None, 3136)              0         \n_________________________________________________________________\ndense (Dense)                (None, 128)               401536    \n_________________________________________________________________\ndense_1 (Dense)              (None, 3)                 387       \n=================================================================\nTotal params: 458,243\nTrainable params: 458,243\nNon-trainable params: 0\n_________________________________________________________________</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Make definition for check the result</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">check_result</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> result <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'sciccors'</span>\n  <span class=\"token keyword\">elif</span> result <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'rock'</span>\n  <span class=\"token keyword\">elif</span> result <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'paper'</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Make function for upload file and do prediction</span>\nuploaded <span class=\"token operator\">=</span> files<span class=\"token punctuation\">.</span>upload<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">check_uploaded_image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">for</span> fn <span class=\"token keyword\">in</span> uploaded<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    img <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>load_img<span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">,</span> target_size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    imgplot <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>img_to_array<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    images <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    result <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span>predict_classes<span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>check_result<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ncheck_uploaded_image<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Hasil</h2>\n<p><img src=\"https://i.ibb.co/nRKMZNZ/Annotation-2020-06-20-145407.jpg\" alt=\"result\"></p>","frontmatter":{"title":"Submission Dicoding kelas Belajar Machine Learning untuk Pemula","date":"June 20, 2020","description":"Halo semuanya, setelah saya berusaha untuk menyelesaikan kelas belajar machine learning pemula sambil melakukan kesibukan lain seperti bekerja dan hal lainnya. Akhirnya saya menyelesaikan submission. Submission yang ada pada kelas ini adalah mencoba menggunakan dataset gambar rock sccisors paper dimana kita harus melakukan klasifikasi dengan ketentuan yang telah diberikan."}},"allMarkdownRemark":{"tag":[{"tag":"Clean code","totalCount":1},{"tag":"Dicoding","totalCount":1},{"tag":"Javascript","totalCount":1},{"tag":"Programming","totalCount":2},{"tag":"Python","totalCount":3},{"tag":"React","totalCount":1},{"tag":"React Native","totalCount":1},{"tag":"Submission","totalCount":1},{"tag":"Testing","totalCount":1},{"tag":"Tutorial","totalCount":1}]},"previous":{"fields":{"slug":"/buat-carousel-dengan-react-hooks/"},"frontmatter":{"title":"Buat Carousel auto slide menggunakan React Hooks"}},"next":null},"pageContext":{"id":"d657884b-f7f8-5e28-8f19-03cdf13afc92","previousPostId":"6ac889d3-0b5f-59b2-be66-16e0febb90c8","nextPostId":null}},"staticQueryHashes":["2841359383"]}